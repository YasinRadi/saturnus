// Example of OOP possible uses with std
let { abstract, entries, mixin, trait, impl } = require("../src/assets/std");

class Simple {}

@trait()
class TraitLike {
  @abstract() fn foo(self) {}
}

@impl(TraitLike)
class Implementor {
  fn me(self) {
    return "Implementor";
  }
  fn foo(self) {
    print("The foo be like: " ++ self.me());
  }
}

@mixin(Implementor)
class Child {
  fn me(self) {
    return "The child";
  }
}

class BeMe {
  fn bar(self) {
    return "Amogus";
  }
}

@mixin(BeMe)
@mixin(Child)
class MonsterJack {
  fn me(self) {
    return "Sus town? " ++ self.bar();
  }
}

let child = Child {};
let imp = Implementor {};
let monster = MonsterJack {};
imp.foo();
child.foo();
monster.foo();
