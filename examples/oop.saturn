// Example of OOP possible uses with std
let { abstract, entries, inherit, trait } = require("../src/assets/std");

class Simple {}

@trait()
class TraitLike {
  @abstract() fn foo(self) {}
}

@impl(TraitLike)
class Implementor {
  fn me(self) {
    return "Trait-like's implementation";
  }
  fn foo(self) {
    print("Foo like " ++ self.me());
  }
}

@inherit(Implementor)
class Child {
  fn me(self) {
    return "The child";
  }
}

let child = Child {};
let imp = Implementor {};

let x = [1, 2, 3];
let y = [4, 5, 6];
let z = x ::: y;

for (k, v) in entries(z) {
  print(k ++ " => " ++ v);
}
