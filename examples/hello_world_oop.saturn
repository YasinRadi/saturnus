// This example contains basic Hello World like OOP

// In Saturnus, inheritance is disabled by design.
// Use composition instead.
class Greeter {
  let name = "";
  
  // A simple method:
  fn greet(self) {
    return "Hello " ++ self.name ++ "!";
  }

  // Static methods just don't use the "self" param:
  fn new(name) {
    return Greeter { name };
  }

  // Operator overload also is here!
  operator +(self, other) {
    return Greeter::new(self.name ++ " & " ++ other.name);
  }
}

// Test it out!
let world = Greeter::new("World");
print(world.greet());

// Test operators:
let sum = Greeter::new("Foo") + Greeter::new("Bar");
print(sum.greet());
